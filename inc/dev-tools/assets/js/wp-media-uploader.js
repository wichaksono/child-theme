/**
 * WordPress Media Uploader Script
 *
 * This script handles the functionality for the custom media uploader fields
 * generated by the Field.php class. It allows users to open the WordPress
 * media library, select an image, and see a preview.
 *
 * @version 1.0.0
 * @author Wichaksono
 */
jQuery(document).ready(function ($) {
    'use strict';

    // Ensure the wp.media object exists.
    if (typeof wp === 'undefined' || typeof wp.media === 'undefined') {
        return;
    }

    var mediaFrame;

    // Handles the click event for the "Upload Image" button.
    $(document).on('click', '.media-uploader-button', function (e) {
        e.preventDefault();

        var button = $(this);
        var wrapper = button.closest('.media-uploader-wrapper');
        var inputField = wrapper.find('.media-uploader-id');
        var previewContainer = wrapper.find('.media-uploader-preview');
        var previewImage = previewContainer.find('img');
        var removeButton = wrapper.find('.media-remover-button');

        // If the media frame already exists, reopen it.
        if (mediaFrame) {
            mediaFrame.open();
            return;
        }

        // Create a new media frame.
        mediaFrame = wp.media({
            title: 'Select or Upload Media',
            button: {
                text: 'Use this media',
            },
            multiple: false, // Set to true to allow multiple files to be selected.
        });

        /**
         * When an image is selected in the media frame,
         * run a callback.
         */
        mediaFrame.on('select', function () {
            // Get the selected attachment from the media frame.
            var attachment = mediaFrame.state().get('selection').first().toJSON();

            // Update the hidden input field with the attachment ID.
            inputField.val(attachment.id);

            // Set the preview image source. Use 'medium' size if available, otherwise fallback to the full URL.
            var imageUrl = attachment.sizes && attachment.sizes.medium
                ? attachment.sizes.medium.url
                : attachment.url;
            previewImage.attr('src', imageUrl);

            // Show the preview container and the remove button.
            previewContainer.show();
            removeButton.show();
        });

        // Finally, open the media frame.
        mediaFrame.open();
    });

    // Handles the click event for the "Remove Image" button.
    $(document).on('click', '.media-remover-button', function (e) {
        e.preventDefault();

        var button = $(this);
        var wrapper = button.closest('.media-uploader-wrapper');
        var inputField = wrapper.find('.media-uploader-id');
        var previewContainer = wrapper.find('.media-uploader-preview');
        var previewImage = previewContainer.find('img');

        // Clear the input field's value.
        inputField.val('');

        // Clear the preview image's src and hide the container.
        previewImage.attr('src', '');
        previewContainer.hide();

        // Hide the remove button itself.
        button.hide();
    });
});